{"version":3,"sources":["components/Button.js","components/SearchForm.js","components/Header.js","components/DateInfo.js","components/HolidaysList.js","components/Blurb.js","components/Aside.js","components/Footer.js","App.js","index.js"],"names":["Button","className","onClick","children","SearchForm","onClickSearch","type","id","placeholder","Header","src","alt","width","height","DateInfo","date","onBtnChangeDate","onInputChangeDate","onChange","onBlur","dateInputEl","document","querySelector","dateBtnEl","classList","toggle","aria-label","HolidaysList","holidays","searchTerm","useEffect","term","setShowDate","useState","showDate","length","map","holiday","month","day","toString","padStart","name","_id","Blurb","title","Aside","href","netlify","htmlFor","Footer","App","getHolidays","a","fetch","data","json","results","searchHolidays","e","preventDefault","getElementById","value","setSearchTerm","setHolidays","inputDateEl","dateInfo","getDateInfo","target","setHolidaysDate","onBackBtn","dateDeets","strDate","Date","months","now","getUTCMonth","getUTCDate","year","getFullYear","formattedDate","holidaysDate","fetchHolidays","class","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78bced16.chunk.js","sourcesContent":["export default function Button({ className, onClick, children }) {\n  return (\n    <button className={`btn ${className}`} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n","import Button from './Button';\n\nexport default function SearchForm({ onClickSearch }) {\n  return (\n    <form className=\"tih-search\">\n      <label className=\"label-search\">Search</label>\n      <input type=\"text\" id=\"text-search\" className=\"form-control\" placeholder=\"Enter search terms here...\" />\n      <Button\n        className=\"btn-search\"\n        onClick={onClickSearch}><i className=\"fas fa-search\"></i></Button>\n    </form>\n  )\n}\n\n","import SearchForm from './SearchForm';\n\nexport default function Header({ onClickSearch }) {\n  return (\n    <header className=\"tih-header\">\n      <h1 className=\"tih-logo\">\n        <img src=\"/img/icon.svg\" alt=\"\" width='50' height='50' />\n        Today's Holidays</h1>\n      <SearchForm onClickSearch={onClickSearch} />\n    </header>\n  )\n}\n\n\n","import Button from './Button';\n\nexport default function DateInfo({ date, onBtnChangeDate, onInputChangeDate }) {\n  const onDateInputBlur = () => {\n    const dateInputEl = document.querySelector('.input-date');\n    const dateBtnEl = document.querySelector('.btn-change-date');\n    dateInputEl.classList.toggle('hide');\n    dateBtnEl.classList.toggle('hide');\n  }\n  return (\n    <section className=\"date-info\">\n      <span className=\"date-text\">{date}</span>\n      <input type=\"date\" onChange={onInputChangeDate} onBlur={onDateInputBlur} className=\"btn input-date hide\" aria-label=\"Choose a Date\" />\n      <Button className='btn btn-change-date' onClick={onBtnChangeDate}>Change Date</Button>\n    </section>\n  )\n}\n","import { useEffect, useState } from 'react';\nexport default function HolidaysList({ holidays, searchTerm }) {\n  const updateSearchTerm = (term) => {\n    if (term) document.querySelector('.tih-holidays-list').classList.toggle('search-results');\n    setShowDate(term);\n  };\n  useEffect(() => {\n    updateSearchTerm(searchTerm);\n  }, [searchTerm]);\n  const [showDate, setShowDate] = useState('');\n  return (\n    <ul className=\"tih-holidays-list\">\n      {holidays.length > 0 ? holidays.map(holiday => (\n        <li key={holiday._id}>\n          {\n            showDate ?\n              <span className=\"search-date\">{holiday.month}/{holiday.day.toString().padStart(2, '0')}</span>\n              : ''\n          }\n          <span>{holiday.name}</span>\n        </li>\n      )) : (<span className=\"not-found\">Holidays Not Found</span>)}\n    </ul>\n  )\n}\n","export default function Blurb({ title, children }) {\n  return (\n    <div className=\"tih-blurb\">\n      <h3>{title}</h3>\n      <div>{children}</div>\n    </div>\n  )\n}\n","import Blurb from './Blurb';\n\nexport default function Aside() {\n  return (\n    <section className=\"tih-aside\">\n      <Blurb title=\"About This Site\">\n        <p>\n          Today's Holidays uses <a href=\"https://todaysholidays.herokuapp.com\">Today's Holidays API</a>, aggregated from several sources, including <a href=\"https://www.timeanddate.com/holidays/fun/\">Time and Date</a> and <a href=\"https://www.holidayscalendar.com/categories/weird/\">Holidays Calendar</a>.</p>\n        <p>Notice we're missing a holiday? Fill out the Submit a Holiday form and we'll get it added!\n        </p>\n      </Blurb>\n      <Blurb title=\"Submit a Holiday\">\n        <form netlify=\"true\" className=\"form-submit-holiday\">\n          <div className=\"form-fields\">\n            <label htmlFor=\"add-date\" >Holiday Date</label>\n            <input type=\"date\" id=\"add-date\" placeholder=\"Enter holiday date\" className=\"form-control\" />\n          </div>\n          <div className=\"form-fields\">\n            <label htmlFor=\"add-name\">Holiday Name</label>\n            <input type=\"text\" id=\"add-name\" className=\"form-control\" placeholder=\"Enter holiday name\" />\n          </div>\n          <div className=\"form-fields\">\n            <label htmlFor=\"add-info\">Where can we find more info?</label>\n            <input type=\"text\" className=\"form-control\" id=\"add-info\" placeholder=\"Link to more information\" />\n          </div>\n          <button className=\"btn btn-submit-holiday\">Send Form</button>\n        </form>\n      </Blurb>\n      <Blurb title=\"Connect with Us\">\n        <p>Want a digest of this week's holidays delivered directly to your inbox every Monday? Join the mailing list below &mdash; we send out the holidays and nothing else! </p>\n        <div className=\"form-list form-fields\">\n          <label htmlFor=\"list-email\" className=\"label-email\">Email</label>\n          <input type=\"email\" id=\"list-email\" placeholder=\"Enter email address...\" />\n          <button className=\"btn btn-submit-list\">Join List</button>\n        </div>\n      </Blurb>\n    </section>\n  )\n}\n\n","export default function Footer() {\n  return (\n    <footer className=\"tih-footer\">\n      <p>\n        <img src=\"/img/icon.svg\" width=\"50\" height=\"50\" alt=\"\" />\n        <a href=\"https://github.com/Ttesori\">Today's Holidays Application</a> by <br />\n        <a href=\"https://tonitesori.dev\">Tesori Design &amp; Development</a></p>\n    </footer>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport DateInfo from './components/DateInfo';\nimport HolidaysList from './components/HolidaysList';\nimport Aside from './components/Aside'\nimport Footer from './components/Footer';\nimport Button from './components/Button';\nimport './main.css';\n\nfunction App() {\n\n  const getHolidays = async (month, day) => {\n    const data = await fetch(`https://todaysholiday.herokuapp.com/holidays/${month}/${day}`);\n    const results = await data.json();\n    return results;\n  };\n  const searchHolidays = async (searchTerm) => {\n    const data = await fetch(`https://todaysholiday.herokuapp.com/holidays/search?s=${searchTerm}`);\n    const results = await data.json();\n    return results;\n  };\n  const onClickSearch = async (e) => {\n    e.preventDefault();\n    const searchTerm = document.getElementById('text-search').value;\n    if (searchTerm) {\n      document.getElementById('text-search').value = '';\n      setSearchTerm(searchTerm);\n      const results = await searchHolidays(searchTerm);\n      setHolidays(results);\n    }\n  }\n  const onChangeDate = (e) => {\n    e.preventDefault();\n    // Show picker\n    document.querySelector('.input-date').classList.toggle('hide');\n    // Hide button\n    document.querySelector('.btn-change-date').classList.toggle('hide');\n  }\n  const onInputChangeDate = async (e) => {\n    // Update shown holidays\n    const inputDateEl = document.querySelector('.input-date');\n    inputDateEl.classList.toggle('hide');\n    // Hide button\n    document.querySelector('.btn-change-date').classList.toggle('hide');\n    const dateInfo = getDateInfo(e.target.value);\n    inputDateEl.value = '';\n    setHolidaysDate(dateInfo);\n    const data = await getHolidays(dateInfo.month, dateInfo.day);\n    setHolidays(data);\n  }\n  const onBackBtn = async () => {\n    setSearchTerm('');\n    const dateDeets = getDateInfo();\n    const data = await getHolidays(dateDeets.month, dateDeets.day);\n    setHolidays(data);\n    document.querySelector('.tih-holidays-list').classList.toggle('search-results');\n  }\n  const getDateInfo = (strDate = new Date()) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const now = new Date(strDate);\n    const month = now.getUTCMonth();\n    const day = now.getUTCDate();\n    const year = now.getFullYear();\n    return {\n      formattedDate: `${months[month]} ${day}, ${year}`,\n      month: month + 1,\n      day\n    }\n  }\n  const [holidays, setHolidays] = useState([]);\n  const [holidaysDate, setHolidaysDate] = useState(getDateInfo(new Date()));\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchHolidays = async (month, day) => {\n      const data = await getHolidays(month, day);\n      setHolidays(data);\n    }\n    const dateDeets = getDateInfo();\n    fetchHolidays(dateDeets.month, dateDeets.day);\n  }, []);\n\n  return (\n    <>\n      <Header onClickSearch={onClickSearch} />\n      {\n        searchTerm ?\n          <div className=\"date-info\">\n            <Button className=\"btn-back\" onClick={onBackBtn}>\n              <i class=\"fas fa-long-arrow-alt-left\"></i>\n              Back to Today's Holidays\n              </Button>\n          </div>\n          : (\n            <DateInfo date={holidaysDate.formattedDate} onBtnChangeDate={onChangeDate} onInputChangeDate={onInputChangeDate} />)\n      }\n      <main className=\"tih-main\">\n        {\n          searchTerm ?\n            <h1>Results for '{searchTerm}'</h1> :\n            <h1>Celebrate 🎉 <br />\n              <span>Today IS a holiday!</span>\n            </h1>\n        }\n        <HolidaysList holidays={holidays} searchTerm={searchTerm} />\n      </main>\n      <Aside />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}